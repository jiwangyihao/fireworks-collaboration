{
  "//": "=========================================================",
  "//": "  Fireworks Collaboration - Workspace Configuration",
  "//": "  P7.0 Phase: Workspace & Multi-Repository Management",
  "//": "=========================================================",
  "//": "",
  "//": "This file defines a workspace containing multiple related",
  "//": "repositories. Copy this to workspace.json and customize",
  "//": "for your project.",
  "//": "",

  "name": "example-workspace",
  "description": "Example workspace with multiple repositories",
  "rootPath": "/path/to/workspace/root",
  
  "repositories": [
    {
      "id": "frontend",
      "name": "Frontend Application",
      "path": "frontend",
      "remoteUrl": "https://github.com/example/frontend.git",
      "defaultBranch": "main",
      "tags": ["web", "react", "critical"],
      "enabled": true,
      "customConfig": {
        "buildCommand": "npm run build",
        "testCommand": "npm test"
      }
    },
    {
      "id": "backend",
      "name": "Backend API",
      "path": "backend",
      "remoteUrl": "https://github.com/example/backend.git",
      "defaultBranch": "main",
      "tags": ["api", "nodejs", "critical"],
      "enabled": true,
      "customConfig": {
        "buildCommand": "npm run build",
        "testCommand": "npm test"
      }
    },
    {
      "id": "shared-lib",
      "name": "Shared Library",
      "path": "libs/shared",
      "remoteUrl": "https://github.com/example/shared-lib.git",
      "defaultBranch": "main",
      "tags": ["library", "typescript"],
      "enabled": true,
      "customConfig": {}
    },
    {
      "id": "docs",
      "name": "Documentation",
      "path": "docs",
      "remoteUrl": "https://github.com/example/docs.git",
      "defaultBranch": "main",
      "tags": ["documentation"],
      "enabled": false,
      "customConfig": {
        "buildCommand": "mkdocs build"
      }
    }
  ],

  "createdAt": "2025-01-01T00:00:00Z",
  "updatedAt": "2025-01-15T12:30:00Z",
  
  "metadata": {
    "team": "Platform Engineering",
    "project": "Example Microservices",
    "environment": "development"
  },

  "//": "",
  "//": "=========================================================",
  "//": "  Field Descriptions",
  "//": "=========================================================",
  "//": "",
  "//": "name: Workspace name (required)",
  "//": "  - Must be unique across your workspaces",
  "//": "  - Used for identification and display",
  "//": "",
  "//": "description: Optional workspace description",
  "//": "  - Helps document workspace purpose",
  "//": "",
  "//": "rootPath: Workspace root directory (required)",
  "//": "  - Absolute path to workspace root",
  "//": "  - All repository paths are relative to this",
  "//": "",
  "//": "repositories: Array of repository entries (required)",
  "//": "  Each repository has:",
  "//": "    - id: Unique identifier within workspace (required)",
  "//": "    - name: Display name (required)",
  "//": "    - path: Relative path from rootPath (required)",
  "//": "    - remoteUrl: Git remote URL (required)",
  "//": "    - defaultBranch: Default branch name (default: 'main')",
  "//": "    - tags: Array of tags for filtering (optional)",
  "//": "    - enabled: Whether repository is active (default: true)",
  "//": "    - customConfig: Custom metadata (optional)",
  "//": "",
  "//": "createdAt: ISO 8601 timestamp (auto-generated)",
  "//": "  - Created when workspace is first saved",
  "//": "",
  "//": "updatedAt: ISO 8601 timestamp (auto-updated)",
  "//": "  - Updated whenever workspace is modified",
  "//": "",
  "//": "metadata: Custom key-value pairs (optional)",
  "//": "  - Store team info, project details, etc.",
  "//": "",
  "//": "=========================================================",
  "//": "  Example Scenarios",
  "//": "=========================================================",
  "//": "",
  "//": "Scenario 1: Monorepo Structure",
  "//": "{",
  "//": "  \"name\": \"monorepo\",",
  "//": "  \"rootPath\": \"/projects/monorepo\",",
  "//": "  \"repositories\": [",
  "//": "    {",
  "//": "      \"id\": \"main\",",
  "//": "      \"name\": \"Main Repository\",",
  "//": "      \"path\": \".\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/monorepo.git\",",
  "//": "      \"enabled\": true",
  "//": "    }",
  "//": "  ]",
  "//": "}",
  "//": "",
  "//": "Scenario 2: Microservices Architecture",
  "//": "{",
  "//": "  \"name\": \"microservices\",",
  "//": "  \"rootPath\": \"/projects/microservices\",",
  "//": "  \"repositories\": [",
  "//": "    {",
  "//": "      \"id\": \"auth-service\",",
  "//": "      \"path\": \"services/auth\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/auth-service.git\",",
  "//": "      \"tags\": [\"service\", \"critical\"]",
  "//": "    },",
  "//": "    {",
  "//": "      \"id\": \"api-gateway\",",
  "//": "      \"path\": \"gateway\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/api-gateway.git\",",
  "//": "      \"tags\": [\"service\", \"critical\"]",
  "//": "    },",
  "//": "    {",
  "//": "      \"id\": \"user-service\",",
  "//": "      \"path\": \"services/user\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/user-service.git\",",
  "//": "      \"tags\": [\"service\"]",
  "//": "    }",
  "//": "  ]",
  "//": "}",
  "//": "",
  "//": "Scenario 3: Multi-Language Project",
  "//": "{",
  "//": "  \"name\": \"multi-lang\",",
  "//": "  \"rootPath\": \"/projects/multi-lang\",",
  "//": "  \"repositories\": [",
  "//": "    {",
  "//": "      \"id\": \"web\",",
  "//": "      \"path\": \"web\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/web.git\",",
  "//": "      \"tags\": [\"javascript\", \"frontend\"]",
  "//": "    },",
  "//": "    {",
  "//": "      \"id\": \"api\",",
  "//": "      \"path\": \"api\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/api.git\",",
  "//": "      \"tags\": [\"rust\", \"backend\"]",
  "//": "    },",
  "//": "    {",
  "//": "      \"id\": \"mobile\",",
  "//": "      \"path\": \"mobile\",",
  "//": "      \"remoteUrl\": \"https://github.com/org/mobile.git\",",
  "//": "      \"tags\": [\"swift\", \"kotlin\", \"mobile\"]",
  "//": "    }",
  "//": "  ]",
  "//": "}",
  "//": "",
  "//": "=========================================================",
  "//": "  Tag-Based Filtering",
  "//": "=========================================================",
  "//": "",
  "//": "Tags enable selective operations on repository subsets:",
  "//": "",
  "//": "Common tag categories:",
  "//": "  - Environment: dev, staging, prod",
  "//": "  - Priority: critical, high, low",
  "//": "  - Type: frontend, backend, service, library, docs",
  "//": "  - Technology: react, nodejs, rust, python",
  "//": "  - Team: team-a, team-b, platform",
  "//": "",
  "//": "Example: Batch operations on 'critical' repositories only",
  "//": "",
  "//": "=========================================================",
  "//": "  Best Practices",
  "//": "=========================================================",
  "//": "",
  "//": "1. Repository Organization:",
  "//": "   - Group related repos in same workspace",
  "//": "   - Use consistent path structure",
  "//": "   - Document dependencies in customConfig",
  "//": "",
  "//": "2. ID Conventions:",
  "//": "   - Use kebab-case for repository IDs",
  "//": "   - Make IDs descriptive and unique",
  "//": "   - Avoid special characters except dash",
  "//": "",
  "//": "3. Path Management:",
  "//": "   - Use relative paths from rootPath",
  "//": "   - Avoid absolute paths in repository entries",
  "//": "   - Keep workspace.json portable across machines",
  "//": "",
  "//": "4. Branch Strategy:",
  "//": "   - Set defaultBranch consistently across repos",
  "//": "   - Common choices: main, master, develop",
  "//": "   - Align with team's branching strategy",
  "//": "",
  "//": "5. Tagging Strategy:",
  "//": "   - Use tags for batch operations",
  "//": "   - Combine multiple dimensions (type + priority)",
  "//": "   - Keep tag names consistent across workspace",
  "//": "",
  "//": "6. Metadata Usage:",
  "//": "   - Store team ownership information",
  "//": "   - Document deployment dependencies",
  "//": "   - Track build/test configurations",
  "//": "",
  "//": "7. Enabled Flag:",
  "//": "   - Disable archived or deprecated repos",
  "//": "   - Temporarily disable problematic repos",
  "//": "   - Batch operations skip disabled repos",
  "//": "",
  "//": "=========================================================",
  "//": "  Version Control",
  "//": "=========================================================",
  "//": "",
  "//": "Consider tracking workspace.json in version control:",
  "//": "",
  "//": "Pros:",
  "//": "  - Team members share same workspace structure",
  "//": "  - Changes are tracked and reviewable",
  "//": "  - Easy to restore previous configurations",
  "//": "",
  "//": "Cons:",
  "//": "  - rootPath may differ across machines",
  "//": "  - Personal preferences may conflict",
  "//": "",
  "//": "Recommendation:",
  "//": "  - Commit workspace.json.template to version control",
  "//": "  - Each developer customizes rootPath locally",
  "//": "  - Add workspace.json to .gitignore if paths vary",
  "//": "",
  "//": "========================================================="
}
