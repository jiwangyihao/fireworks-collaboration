[package]
name = "fireworks-collaboration"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
edition = "2021"
default-run = "fireworks-collaboration"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# 仅保留默认 rlib（移除多 crate-type 以避免重复宏定义冲突）
name = "fireworks_collaboration_lib"

[features]
# 调整：默认不启用 tauri 相关依赖，便于直接 cargo test
# 运行应用时使用: cargo run --features tauri-app 或 cargo tauri dev --features tauri-app
default = []
# 启用 tauri-app 时自动激活相关可选依赖
tauri-app = [
  "tauri",
  "tauri-plugin-opener",
  "tauri-plugin-shell",
  "tauri-plugin-fs",
  "tauri-plugin-http"
]
# 基准测试（需手动启用）
bench = []

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
# 可选 Tauri 依赖（运行应用时启用 feature=tauri-app）
tauri = { version = "2", features = [], optional = true }
tauri-plugin-opener = { version = "2", optional = true }
tauri-plugin-shell = { version = "2", optional = true }
tauri-plugin-fs = { version = "2", optional = true }
tauri-plugin-http = { version = "2", optional = true }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
urlencoding = "2.1"
# 新增：日志与错误、工具类依赖（P0.1）
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }
anyhow = "1"
thiserror = "1"
uuid = { version = "1", features = ["v4", "serde"] }
base64 = "0.22"
ring = { version = "0.17" }
x509-parser = { version = "0.15", default-features = false }
# 新增异步运行时依赖（修复 tokio / tokio_util 未解析错误）
tokio = { version = "1", features = ["rt", "rt-multi-thread", "macros", "time", "sync", "net"] }
tokio-util = { version = "0.7", features = ["rt"] }
zbus = { version = "5", default-features = false, features = ["tokio"] }
# TLS & Certs (P0.3)
rustls = { version = "0.21", features = ["dangerous_configuration"] }
webpki-roots = "0.25"
# HTTP client core (P0.4)
hyper = { version = "0.14", features = ["client", "server", "http1", "tcp", "stream"] }
tokio-rustls = "0.24"
url = "2"
ipnet = "2"
## MP0.4: 移除 gix 依赖，统一到 git2-rs

# 新增：git2-rs（MP0.1 引入，仅骨架，不改变行为）
git2 = { version = "0.19" }
dashmap = "5"
rand = { version = "0.8" }
dirs-next = "2"
once_cell = "1"
sha1 = "0.10"
tempfile = "3"
metrics = "0.21"
hdrhistogram = "7"
num_cpus = "1"
# P6.0: 凭证存储与安全管理相关依赖
aes-gcm = "0.10"
argon2 = "0.5"
hmac = "0.12"
sha2 = "0.10"
zeroize = { version = "1", features = ["derive"] }
chrono = { version = "0.4.42", features = ["serde"] }

[dev-dependencies]
# 与主运行时一致，测试中使用 current_thread 以减少潜在冲突
tokio = { version = "1", features = ["rt", "macros", "time", "sync", "net"] }
futures = "0.3"
once_cell = "1"
proptest = "1"
criterion = { version = "0.5", features= ["html_reports"] }
ctor = "0.2"
rcgen = "0.12"

[[bin]]
name = "adaptive_tls_soak"
path = "soak/main.rs"

# Windows specific dependencies for registry access and credential management
[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3", features = ["winreg", "winnt", "minwindef", "wincred", "errhandlingapi"] }
winreg = "0.52"

# macOS specific dependencies for keychain access
[target.'cfg(target_os = "macos")'.dependencies]
security-framework = "2"

# Linux specific dependencies for secret service
[target.'cfg(target_os = "linux")'.dependencies]
secret-service = "3"

# 测试模块注册（仅注册大模块）

[[test]]
name = "git"
path = "tests/git/mod.rs"
required-features = []

[[test]]
name = "credential"
path = "tests/credential/mod.rs"
required-features = []

[[test]]
name = "events"
path = "tests/events/mod.rs"
required-features = []

[[test]]
name = "quality"
path = "tests/quality/mod.rs"
required-features = []

[[test]]
name = "tasks"
path = "tests/tasks/mod.rs"
required-features = []

[[test]]
name = "e2e"
path = "tests/e2e/mod.rs"
required-features = []

[[test]]
name = "proxy"
path = "tests/proxy/mod.rs"
required-features = []

[[test]]
name = "soak"
path = "tests/soak/mod.rs"
required-features = []

[[test]]
name = "workspace"
path = "tests/workspace/mod.rs"
required-features = []

[[test]]
name = "submodule"
path = "tests/submodule/mod.rs"
required-features = []

[[test]]
name = "commands"
path = "tests/commands/mod.rs"
required-features = []

[[test]]
name = "metrics"
path = "tests/metrics/mod.rs"
required-features = []

# 独立测试文件（tests/ 根目录下的测试）

[[test]]
name = "core"
path = "tests/core.rs"
required-features = []

[[test]]
name = "config"
path = "tests/config.rs"
required-features = []

# Benchmark配置
[[bench]]
name = "credential_benchmark"
harness = false
required-features = ["bench"]

[[bench]]
name = "event_throughput"
harness = false
required-features = ["bench"]
